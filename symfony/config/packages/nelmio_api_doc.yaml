nelmio_api_doc:
    use_validation_groups: true
    areas:
        default:
            with_annotation: true
    documentation:
        info:
            title: Task Manager
            description: Task Manager system using Clean Architecture, DDD and CQRS
            version: 1.0.0
        components:
            securitySchemes:
                Bearer:
                    type: http
                    scheme: bearer
                    bearerFormat: JWT
            schemas:
                objectId:
                    type: object
                    properties:
                        id:
                            type: string
                            format: uuid
                            example: 123e4567-e89b-12d3-a456-426614174000
                userModel:
                    type: object
                    properties:
                        email:
                            type: string
                            format: email
                            example: 'john.smith@local.dev'
                            description: 'User email'
                        firstname:
                            description: 'User firstname'
                            type: 'string'
                            maxLength: 255
                            example: 'John'
                        lastname:
                            description: 'User lastname'
                            type: 'string'
                            maxLength: 255
                            example: 'Smith'
                        password:
                            description: 'User password'
                            type: 'string'
                            format: 'password'
                projectModel:
                    type: object
                    properties:
                        name:
                            description: 'Project name'
                            type: 'string'
                            maxLength: 255
                            example: 'My project'
                        description:
                            description: 'Project description'
                            type: 'string'
                            maxLength: 4000
                            example: 'Yet another awesome project.'
                        finishDate:
                            description: 'Project finish date'
                            type: 'string'
                            format: 'date'
                            example: '2023-05-10'
                        status:
                            description: 'Project status: 0 - closed, 1 - active'
                            type: int
                            enum:
                                - 0
                                - 1
                            example: 1
                taskModel:
                    type: object
                    properties:
                        name:
                            description: 'Task name'
                            type: 'string'
                            maxLength: 255
                            example: 'My task'
                        brief:
                            description: 'Task brief info'
                            type: 'string'
                            maxLength: 2000
                            example: 'Yet another awesome task.'
                        description:
                            description: 'Task description'
                            type: 'string'
                            maxLength: 4000
                            example: 'Yet another awesome task.'
                        startDate:
                            description: 'Task start date'
                            type: 'string'
                            format: 'date'
                            example: '2023-05-01'
                        finishDate:
                            description: 'Task finish date'
                            type: 'string'
                            format: 'date'
                            example: '2023-05-07'
                        status:
                            description: 'Task status: 0 - closed, 1 - active'
                            type: int
                            enum:
                                - 0
                                - 1
                            example: 1
            responses:
                createObject:
                    description: 'Returns the ID of the newly created object.'
                    content:
                        application/json:
                            schema:
                                ref: '#/components/schemas/objectId'
                login:
                    description: 'Returns JWT token.'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                generic200:
                    description: 'Successful operation'
                generic201:
                    description: 'Successfully created'
                generic401:
                    description: 'Unauthorized'
                generic403:
                    description: 'Invalid operation'
                generic404:
                    description: 'Not found'
                generic422:
                    description: 'Validation exception'
            parameters:
                projectId:
                    name: id
                    in: path
                    description: 'Project ID'
                    required: true
                    schema:
                        ref: '#/components/schemas/objectId/properties/id'
                requestId:
                    name: requestId
                    in: path
                    description: 'Request ID'
                    required: true
                    schema:
                        ref: '#/components/schemas/objectId/properties/id'
                taskId:
                    name: id
                    in: path
                    description: 'Task ID'
                    required: true
                    schema:
                        ref: '#/components/schemas/objectId/properties/id'
                linkedTaskId:
                    name: linkedTaskId
                    in: path
                    description: 'Linked task ID'
                    required: true
                    schema:
                        ref: '#/components/schemas/objectId/properties/id'
