# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    SymfonyApp\:
        resource: '../src/'
        exclude:
            - '../src/Kernel.php'

    TaskManager\:
        resource: '../../src/'
        exclude:
            - '../../src/tests/'

    _instanceof:
        TaskManager\Shared\Application\Bus\Command\CommandHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: command.bus }
        TaskManager\Shared\Application\Bus\Query\QueryHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: query.bus }
        TaskManager\Shared\Application\Bus\Event\DomainEventSubscriberInterface:
            tags:
                - { name: messenger.message_handler, bus: domainEvent.bus }
        TaskManager\Shared\Application\Bus\Event\IntegrationEventSubscriberInterface:
            tags:
                - { name: messenger.message_handler, bus: integrationEvent.bus }
        TaskManager\Shared\Domain\Event\DomainEventInterface:
            tags: [ 'task_manager.domain_event' ]

    # @see ArrayArgumentLoaderCompilerPass adds class names of all services, tagged with target value, as an argument
    TaskManager\Shared\Infrastructure\Service\DomainEventMapper:
        tags:
            - { name: task_manager.argument_loader, target_tag: task_manager.domain_event }

    Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher:
        arguments:
            $iterations: 100

    Symfony\Component\PasswordHasher\PasswordHasherInterface: '@Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher'

    TaskManager\Shared\Infrastructure\Service\LexikJwtAuthenticatorService:
        arguments:
            $path: '^/api/(?!.*(security)|(test)|(doc)).*$'

    TaskManager\Shared\Infrastructure\Service\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onException }
        arguments:
            $environment: '%env(string:APP_ENV)%'

    Ramsey\Uuid\UuidFactory: ~

    Ramsey\Uuid\UuidFactoryInterface: '@Ramsey\Uuid\UuidFactory'
